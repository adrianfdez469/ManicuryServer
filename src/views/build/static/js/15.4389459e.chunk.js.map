{"version":3,"sources":["App/Core/Pages/Charts/Worktypes/worktypesChart.view.js"],"names":["useTheme","am4themes_animated","WorkTypesChart","props","state","cantidades","chart","create","XYChart","language","locale","am4lang_es_ES","hiddenState","properties","opacity","data","this","workTypesQuantity","categoryAxis","xAxes","push","CategoryAxis","renderer","grid","template","location","title","text","dataFields","category","valueAxis","yAxes","ValueAxis","tooltip","disabled","min","series","ColumnSeries","valueY","categoryX","name","tooltipText","cursor","XYCursor","showChart","dispose","console","log","id","style","width","height","component","marginLeft","marginRight","container","alignItems","spacing","item","checked","onChange","setState","value","color","Component"],"mappings":"woEAYAA,YAASC,K,IAGHC,E,YAEF,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACXC,YAAY,GAHE,E,yEAehB,IAAIC,EAAQC,YAAO,YAAaC,KAChCF,EAAMG,SAASC,OAASC,IACxBL,EAAMM,YAAYC,WAAWC,QAAU,EAGvCR,EAAMS,KAAOC,KAAKb,MAAMc,kBAExB,IAAIC,EAAeZ,EAAMa,MAAMC,KAAK,IAAIC,KACxCH,EAAaI,SAASC,KAAKC,SAASC,SAAW,EAC/CP,EAAaQ,MAAMC,KAAO,oBAC1BT,EAAaU,WAAWC,SAAW,OAGnC,IAAIC,EAAYxB,EAAMyB,MAAMX,KAAK,IAAIY,KACrCF,EAAUG,QAAQC,UAAW,EAE7BJ,EAAUK,IAAM,EAChBL,EAAUJ,MAAMC,KAAOX,KAAKZ,MAAMC,WAAa,WAAa,WAI5D,IAAI+B,EAAS9B,EAAM8B,OAAOhB,KAAK,IAAIiB,KACnCD,EAAOR,WAAWU,OAAStB,KAAKZ,MAAMC,WAAa,UAAY,UAC/D+B,EAAOR,WAAWW,UAAY,OAC9BH,EAAOI,KAAO,QAQdJ,EAAOK,YAAczB,KAAKZ,MAAMC,WAAa,qBAAuB,sBACpEC,EAAMoC,OAAS,IAAIC,IAMnB3B,KAAKV,MAAQA,I,0CAIbU,KAAK4B,c,2CAIL5B,KAAK4B,c,6CAOD5B,KAAKV,OACPU,KAAKV,MAAMuC,Y,+BAIL,IAAD,OAIP,OAFAC,QAAQC,IAAI/B,KAAKZ,OAET,oCACN,yBAAK4C,GAAG,YAAYC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,WACpD,kBAAC,IAAD,CAAYC,UAAU,MAAMH,MAAO,CAACI,WAAY,OAAQC,YAAa,SACjE,kBAAC,IAAD,CAAMF,UAAU,QAAQG,WAAS,EAACC,WAAW,SAASC,QAAS,GAC3D,kBAAC,IAAD,CAAMC,MAAI,GAAV,yBACI,kBAAC,IAAD,CAAMA,MAAI,GACN,kBAAC,IAAD,CACIC,QAAS3C,KAAKZ,MAAMC,WACpBuD,SAAU,kBAAM,EAAKC,UAAS,SAAAzD,GAAK,MAAK,CAACC,YAAaD,EAAMC,gBAC5DyD,MAAO9C,KAAKZ,MAAMC,WAClB0D,MAAM,aAGlB,kBAAC,IAAD,CAAML,MAAI,GAAV,kC,GA7FaM,aAqGZ9D","file":"static/js/15.4389459e.chunk.js","sourcesContent":["import \"core-js\";\r\nimport React, {Component} from 'react';\r\nimport {useTheme, create} from \"@amcharts/amcharts4/core\";\r\nimport { XYChart, CategoryAxis,ValueAxis, ColumnSeries, XYCursor} from \"@amcharts/amcharts4/charts\";\r\nimport am4lang_es_ES from \"@amcharts/amcharts4/lang/es_ES\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  Switch\r\n} from '@material-ui/core';\r\n\r\nuseTheme(am4themes_animated);\r\n\r\n\r\nclass WorkTypesChart extends Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        cantidades: true\r\n      }\r\n    }\r\n\r\n    showChart () {\r\n\r\n      \r\n      \r\n\r\n\r\n      //options.onlyShowOnViewport = true;\r\n      //options.queue = true; \r\n      let chart = create(\"chartdiv1\", XYChart);\r\n      chart.language.locale = am4lang_es_ES;\r\n      chart.hiddenState.properties.opacity = 0;\r\n      \r\n      \r\n      chart.data = this.props.workTypesQuantity;\r\n\r\n      let categoryAxis = chart.xAxes.push(new CategoryAxis());\r\n      categoryAxis.renderer.grid.template.location = 0;\r\n      categoryAxis.title.text = \"Tipos de trabajos\";\r\n      categoryAxis.dataFields.category = \"name\";\r\n      \r\n\r\n      let valueAxis = chart.yAxes.push(new ValueAxis());\r\n      valueAxis.tooltip.disabled = true;\r\n      //valueAxis.renderer.minWidth = 35;\r\n      valueAxis.min = 0;\r\n      valueAxis.title.text = this.state.cantidades ? \"Cantidad\" : \"Ingresos\";\r\n      //svalueAxis. = \"cantidad\";\r\n\r\n\r\n      var series = chart.series.push(new ColumnSeries());\r\n      series.dataFields.valueY = this.state.cantidades ? \"ammount\" : \"ingress\";\r\n      series.dataFields.categoryX = \"name\";\r\n      series.name = \"Sales\";\r\n\r\n\r\n      //let series = chart.series.push(new ColumnSeries());\r\n      //series.dataFields.categoryX = \"name\";\r\n      //series.dataFields.valueY = \"ammount\";\r\n            \r\n      // eslint-disable-next-line no-template-curly-in-string\r\n      series.tooltipText = this.state.cantidades ? \"Cantidad: {valueY}\" : \"Ingresos: ${valueY}\";\r\n      chart.cursor = new XYCursor();\r\n\r\n      /*let scrollbarX = new XYChartScrollbar();\r\n      scrollbarX.series.push(series);\r\n      chart.scrollbarX = scrollbarX;*/\r\n\r\n      this.chart = chart;\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.showChart();      \r\n    }\r\n\r\n    componentDidUpdate(){\r\n      this.showChart();      \r\n    }\r\n    /*componentWillUpdate() {\r\n      this.showChart();\r\n    }*/\r\n\r\n    componentWillUnmount() {\r\n      if (this.chart) {\r\n        this.chart.dispose();\r\n      }\r\n    }\r\n  \r\n    render() {\r\n\r\n      console.log(this.state);\r\n      \r\n      return (<>\r\n        <div id=\"chartdiv1\" style={{ width: \"100%\", height: \"400px\" }}></div>\r\n        <Typography component=\"div\" style={{marginLeft: 'auto', marginRight: 'auto'}}>\r\n            <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                <Grid item>Graficar por ingresos</Grid>\r\n                    <Grid item>\r\n                        <Switch\r\n                            checked={this.state.cantidades}\r\n                            onChange={() => this.setState(state => ({cantidades: !state.cantidades}))}\r\n                            value={this.state.cantidades}\r\n                            color=\"primary\"\r\n                        />\r\n                    </Grid>\r\n                <Grid item>Graficar por cantidades</Grid>\r\n            </Grid>\r\n        </Typography>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default WorkTypesChart;"],"sourceRoot":""}