{"version":3,"sources":["App/Core/Pages/Charts/Ingresses/IngressChart.view.js"],"names":["useTheme","am4themes_animated","IngressChart","options","onlyShowOnViewport","queue","chart","create","XYChart","language","locale","am4lang_es_ES","hiddenState","properties","opacity","data","this","props","chartIngressDate","dateAxis","xAxes","push","DateAxis","renderer","grid","template","location","groupData","gridIntervals","setAll","timeUnit","count","groupIntervals","valueAxis","yAxes","ValueAxis","tooltip","disabled","minWidth","title","text","series","ColumnSeries","dataFields","dateX","valueY","tooltipText","cursor","XYCursor","scrollbarX","XYChartScrollbar","showChart","dispose","id","style","width","height","PureComponent"],"mappings":"8mEAOAA,YAASC,K,IAGHC,E,oLAIAC,IAAQC,oBAAqB,EAC7BD,IAAQE,OAAQ,EAChB,IAAIC,EAAQC,YAAO,WAAYC,KAC/BF,EAAMG,SAASC,OAASC,IACxBL,EAAMM,YAAYC,WAAWC,QAAU,EAEvCR,EAAMS,KAAOC,KAAKC,MAAMC,iBAExB,IAAIC,EAAWb,EAAMc,MAAMC,KAAK,IAAIC,KACpCH,EAASI,SAASC,KAAKC,SAASC,SAAW,EAC3CP,EAASQ,WAAY,EACrBR,EAASS,cAAcC,OAAO,CAC5B,CAAEC,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,QAASC,MAAO,GAC5B,CAAED,SAAU,OAAQC,MAAO,KAE7BZ,EAASa,eAAeH,OAAO,CAC7B,CAAEC,SAAU,MAAOC,MAAO,GAC1B,CAAED,SAAU,QAASC,MAAO,GAC5B,CAAED,SAAU,OAAQC,MAAO,KAI7B,IAAIE,EAAY3B,EAAM4B,MAAMb,KAAK,IAAIc,KACrCF,EAAUG,QAAQC,UAAW,EAC7BJ,EAAUV,SAASe,SAAW,GAC9BL,EAAUM,MAAMC,KAAO,eAEvB,IAAIC,EAASnC,EAAMmC,OAAOpB,KAAK,IAAIqB,KACnCD,EAAOE,WAAWC,MAAQ,OAC1BH,EAAOE,WAAWE,OAAS,gBAG3BJ,EAAOK,YAAc,qBACrBxC,EAAMyC,OAAS,IAAIC,IAEnB,IAAIC,EAAa,IAAIC,IACrBD,EAAWR,OAAOpB,KAAKoB,GACvBnC,EAAM2C,WAAaA,EAEnBjC,KAAKV,MAAQA,I,0CAIbU,KAAKmC,c,2CAKLnC,KAAKmC,c,6CAIDnC,KAAKV,OACPU,KAAKV,MAAM8C,Y,+BAKb,OACE,yBAAKC,GAAG,WAAWC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,e,GAtEhCC,iBA2EVvD","file":"static/js/14.39f7c698.chunk.js","sourcesContent":["import \"core-js\";\r\nimport React, {PureComponent} from 'react';\r\nimport {useTheme, create, options} from \"@amcharts/amcharts4/core\";\r\nimport { XYChart,DateAxis, ValueAxis, ColumnSeries, XYCursor, XYChartScrollbar} from \"@amcharts/amcharts4/charts\";\r\nimport am4lang_es_ES from \"@amcharts/amcharts4/lang/es_ES\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nuseTheme(am4themes_animated);\r\n\r\n\r\nclass IngressChart extends PureComponent {\r\n\r\n\r\n    showChart () {\r\n      options.onlyShowOnViewport = true;\r\n      options.queue = true; \r\n      let chart = create(\"chartdiv\", XYChart);\r\n      chart.language.locale = am4lang_es_ES;\r\n      chart.hiddenState.properties.opacity = 0;\r\n      \r\n      chart.data = this.props.chartIngressDate;\r\n\r\n      let dateAxis = chart.xAxes.push(new DateAxis());\r\n      dateAxis.renderer.grid.template.location = 0;\r\n      dateAxis.groupData = true;\r\n      dateAxis.gridIntervals.setAll([\r\n        { timeUnit: \"day\", count: 1 },\r\n        { timeUnit: \"day\", count: 2 },\r\n        { timeUnit: \"day\", count: 3 },\r\n        { timeUnit: \"day\", count: 4 },\r\n        { timeUnit: \"day\", count: 5 },\r\n        { timeUnit: \"day\", count: 6 },\r\n        { timeUnit: \"day\", count: 7 },\r\n        { timeUnit: \"month\", count: 1 },\r\n        { timeUnit: \"year\", count: 1 },\r\n      ]);\r\n      dateAxis.groupIntervals.setAll([\r\n        { timeUnit: \"day\", count: 1 },\r\n        { timeUnit: \"month\", count: 1 },\r\n        { timeUnit: \"year\", count: 1 }\r\n      ]);\r\n      \r\n\r\n      let valueAxis = chart.yAxes.push(new ValueAxis());\r\n      valueAxis.tooltip.disabled = true;\r\n      valueAxis.renderer.minWidth = 35;\r\n      valueAxis.title.text = \"Ingresos ($)\";\r\n\r\n      let series = chart.series.push(new ColumnSeries());\r\n      series.dataFields.dateX = \"date\";\r\n      series.dataFields.valueY = \"ingressAmount\";\r\n      \r\n      // eslint-disable-next-line no-template-curly-in-string\r\n      series.tooltipText = \"Ingreso: ${valueY}\";\r\n      chart.cursor = new XYCursor();\r\n\r\n      let scrollbarX = new XYChartScrollbar();\r\n      scrollbarX.series.push(series);\r\n      chart.scrollbarX = scrollbarX;\r\n\r\n      this.chart = chart;\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.showChart();\r\n      \r\n    }\r\n\r\n    componentDidUpdate(){\r\n      this.showChart();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      if (this.chart) {\r\n        this.chart.dispose();\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"400px\" }}></div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default IngressChart;"],"sourceRoot":""}