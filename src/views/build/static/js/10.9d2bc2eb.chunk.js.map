{"version":3,"sources":["../node_modules/@material-ui/icons/Edit.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/icons/MoreVert.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","App/Core/Pages/Spends/Spend/spendRow.view.js","App/Core/Pages/Spends/useSpend.js","App/Core/Pages/Spends/addSpend.view.js","App/Core/Pages/Spends/spendQuerys.js","App/Core/Pages/Spends/spends.view.js","App/Core/Pages/Spends/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","CardHeader","React","forwardRef","props","ref","action","avatar","classes","className","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","other","_objectWithoutProperties","type","Typography","_extends","variant","display","color","clsx","root","content","withStyles","alignItems","padding","flex","marginRight","alignSelf","marginTop","name","useRowStyles","makeStyles","theme","card","maxWidth","height","cursor","boxShadow","cardHeader","overflow","Row","spend","remove","edit","useState","anchorEl","setAnchorEl","isMenuOpen","handleMenuClose","Actions","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","ListItemIcon","fontSize","ListItemText","primary","Tooltip","spendtype","Card","IconButton","aria-label","event","target","spendamount","getStringDate","date","CardContent","cardContent","style","position","useSpend","useSpendTypeState","useSpendAmmountState","useSpendDate","Date","AddSpend","handleOk","handleCancel","spendTypeState","setSpendType","spendAmmountState","setSpendAmmount","selectedDate","setSelectedDate","useEffect","Dialog","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","fullWidth","onChange","handleChange","utils","DateFnsUtils","Grid","container","disableToolbar","format","KeyboardButtonProps","DialogActions","Button","editSpendMutation","gql","removeSpendMutation","getSpends","useStyles","spacing","GridItem","item","xs","sm","md","lg","children","SpendCmp","openAdd","setOpenAdd","editSpend","setEditSpend","useQuery","variables","start","limit","data","loading","refetch","error","useMutation","fnSave","fnRemove","useMessage","Message","setMessage","useProgress","Progress","setShowProgress","CssBaseline","Container","spends","map","key","spendId","then","resp","removeSpend","success","Error","catch","err","actions","icon","alert","spendammount","upsertSpend","saveSpend","Spends"],"mappings":"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","file":"static/js/10.9d2bc2eb.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React from 'react';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    Typography,\r\n    Menu,\r\n    MenuItem,\r\n    IconButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    makeStyles,\r\n    Tooltip\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {getStringDate} from '../../../Generics';\r\n\r\nconst useRowStyles = makeStyles(theme => ({\r\n    card: {\r\n        maxWidth: 345,\r\n        height: 170,\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            boxShadow: '0px 5px 10px -1px rgba(0,0,0,0.3), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0 ,0,0,0.12)'\r\n        },\r\n    },\r\n    cardHeader: {\r\n        overflow: 'auto'\r\n    }\r\n}));\r\n  \r\nconst Row = props => {\r\n\r\n    const {spend, remove, edit} = props;\r\n    const classes = useRowStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const openMenu = event => {\r\n        setAnchorEl(event.target);\r\n    }\r\n    const isMenuOpen = !!anchorEl;\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n    const Actions = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}        \r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n\r\n            <MenuItem onClick={() => {\r\n                 handleMenuClose();\r\n                 edit();\r\n            }}>\r\n                <ListItemIcon>\r\n                    <EditIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Modificar\" />\r\n            </MenuItem>\r\n\r\n            <MenuItem onClick={() => {\r\n                 handleMenuClose();\r\n                 remove();\r\n            }}>\r\n                <ListItemIcon>\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Eliminar\" />\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return <>    \r\n        <Tooltip title={spend.spendtype}>\r\n            <Card className={classes.card}>\r\n                <CardHeader\r\n                    action={\r\n                        <IconButton aria-label=\"settings\" onClick={openMenu}>\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                    }\r\n                    title={`-$${spend.spendamount}`}\r\n                    \r\n                    subheader={getStringDate(spend.date)}\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\" style={{position:'static'}}>\r\n                        {spend.spendtype}\r\n                    </Typography>\r\n                </CardContent>            \r\n            </Card>\r\n        </Tooltip>    \r\n        {Actions}\r\n    </>\r\n    ;\r\n\r\n};\r\n\r\nexport default Row;","import {useState} from 'react';\r\n\r\nconst useSpend = () => {\r\n\r\n    const useSpendTypeState = useState('');\r\n    const useSpendAmmountState = useState(0);\r\n    const useSpendDate = useState(new Date());\r\n\r\n    return {\r\n        useSpendTypeState,\r\n        useSpendAmmountState,\r\n        useSpendDate\r\n    }\r\n}\r\nexport default useSpend;","import 'date-fns';\r\nimport React from 'react';\r\n\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    TextField,\r\n    DialogActions,\r\n    Button,\r\n    Grid\r\n} from '@material-ui/core';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\n\r\n\r\nimport {NumberInput} from '../../Generics';\r\nimport useSpend from './useSpend';\r\n\r\nconst AddSpend = props => {\r\n\r\n    const {handleOk, handleCancel, open, edit} = props;\r\n\r\n    const {useSpendTypeState, useSpendAmmountState, useSpendDate} = useSpend();\r\n    const [spendTypeState, setSpendType] = useSpendTypeState;\r\n    const [spendAmmountState, setSpendAmmount] = useSpendAmmountState;\r\n    const [selectedDate, setSelectedDate] = useSpendDate;\r\n\r\n    React.useEffect(() => {\r\n        if(edit){\r\n            setSpendType(edit.spendtype);\r\n            setSpendAmmount(edit.spendamount);\r\n            setSelectedDate(edit.date);\r\n        }else {\r\n            setSpendType('');\r\n            setSpendAmmount(0);\r\n            setSelectedDate(new Date());\r\n        };\r\n\r\n    }, [open, edit, setSpendType ,setSpendAmmount, setSelectedDate]);\r\n\r\n    \r\n    return <Dialog \r\n                open={open} \r\n                onClose={handleCancel} \r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Adicionar gasto</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        label=\"Tipo de gasto\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value={spendTypeState}\r\n                        onChange={event => setSpendType(event.target.value)}                        \r\n                    />\r\n\r\n                    <NumberInput \r\n                        handleChange={event => setSpendAmmount(+event.target.value)}\r\n                        value={spendAmmountState}\r\n                        label='Cantidad'\r\n                    />\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>                                              \r\n                        <Grid container >\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                margin=\"normal\"\r\n                                variant=\"dialog\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                label=\"Fecha\"\r\n                                value={selectedDate}\r\n                                onChange={setSelectedDate}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'Fecha',\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                    </MuiPickersUtilsProvider>\r\n                    \r\n                \r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={handleCancel} color=\"primary\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button onClick={() => handleOk( \r\n                                            (edit) && edit.id,\r\n                                            spendTypeState, \r\n                                            spendAmmountState,\r\n                                            selectedDate)} color=\"primary\">\r\n                    Guardar\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n\r\n}\r\nexport default AddSpend;","import {gql} from 'apollo-boost';\r\nconst editSpendMutation = gql`\r\n    mutation ($spendId: ID, $spendtype: String!, $spendammount: Float!, $date: Date) {\r\n        upsertSpend(spendId: $spendId, spendtype: $spendtype, amount: $spendammount, date: $date){\r\n            success\r\n            message\r\n            spend{\r\n            id\r\n            spendtype\r\n            spendamount\r\n            date\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst removeSpendMutation = gql`\r\nmutation($spendId: ID!){\r\n    removeSpend(spendId: $spendId){\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\nconst getSpends = gql`\r\nquery ($spendtype: String, $gte:Float, $lte: Float, $eq: Float, $before: Date, $after: Date, $start: Int, $limit: Int){\r\n    spends(\r\n          spendtype: $spendtype,\r\n          spendamount: {gte:$gte, lte:$lte, eq: $eq},\r\n          dateRange:{\r\n            before: $before,\r\n            after: $after\r\n        },\r\n          pagination:{\r\n            start: $start,\r\n            limit: $limit\r\n        }\r\n    ){\r\n      success\r\n      message\r\n      spend{\r\n        id\r\n        spendtype\r\n        spendamount\r\n        date\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport {getSpends, removeSpendMutation, editSpendMutation};","import React, { useEffect } from 'react';\r\nimport {useMutation, useQuery} from 'react-apollo';\r\nimport {\r\n    Container,\r\n    CssBaseline,\r\n    Grid,\r\n    makeStyles    \r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport {OpenIconSpeedDial, useMessage, useProgress} from '../../Generics';\r\n\r\nimport Row from './Spend/spendRow.view';\r\nimport AddSpend from './addSpend.view';\r\nimport {getSpends, editSpendMutation, removeSpendMutation} from './spendQuerys';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        padding: theme.spacing(1)        \r\n    }\r\n}));\r\n\r\nconst GridItem = props => {\r\n    return <Grid item xs={12}  sm={6} md={6} lg={4}>                    \r\n                {props.children}\r\n            </Grid>\r\n};\r\n\r\nconst SpendCmp = props => {\r\n\r\n    const classes = useStyles();\r\n    const [openAdd, setOpenAdd] = React.useState(false);\r\n    \r\n    const [editSpend, setEditSpend] = React.useState(null);\r\n    const {data, loading, refetch, error} = useQuery(getSpends, {\r\n        variables: {\r\n            start: 0, limit: 20\r\n        }\r\n    });\r\n    \r\n    const [fnSave] = useMutation(editSpendMutation);\r\n    const [fnRemove] = useMutation(removeSpendMutation);\r\n    const [Message, setMessage] = useMessage();\r\n    const [Progress, setShowProgress] = useProgress();\r\n\r\n\r\n    \r\n\r\n    const saveSpend = (spendId, spendtype, spendammount, date) => {\r\n        setOpenAdd(false);\r\n        setShowProgress(true);\r\n        fnSave({\r\n            variables: {\r\n                spendId, spendtype, spendammount, date\r\n            }\r\n        })\r\n        .then(resp => {\r\n            if(!resp.data.upsertSpend.success)\r\n                throw new Error();\r\n            else{\r\n                setMessage(\"El gasto ha sido guardado.\", \"success\");\r\n                setShowProgress(false);\r\n            }\r\n        })\r\n        .then(() => {\r\n            refetch();\r\n        })\r\n        .catch(err => {\r\n            setMessage(\"Ha ocurreido un error. No se ha podido salvar el gasto.\", \"error\");\r\n            setShowProgress(false);            \r\n        });\r\n    };\r\n\r\n    const removeSpend = spendId => {\r\n        setShowProgress(true);\r\n        fnRemove({variables:{\r\n            spendId\r\n        }})\r\n        .then(resp => {\r\n            if(!resp.data.removeSpend.success)\r\n                throw new Error();\r\n            else\r\n                setMessage(\"El gasto ha sido eliminado.\", \"success\"); \r\n                setShowProgress(false);\r\n        })\r\n        .then(() => {\r\n            refetch();\r\n        })\r\n        .catch(err => {\r\n            //console.log(err);\r\n            setMessage(\"Ocurrio un error eliminando el gasto.\", \"error\");\r\n            setShowProgress(false);            \r\n        });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if(loading)\r\n            setShowProgress(true);\r\n        else\r\n            setShowProgress(false);\r\n    }, [loading, setShowProgress]);\r\n\r\n    useEffect(() => {\r\n        if(error){\r\n            setMessage(\"Ocurrio un error al intentar cargar los datos.\", \"error\");\r\n        }\r\n    }, [error, setMessage]);\r\n\r\n    return <>\r\n        {Progress}\r\n        <CssBaseline />\r\n            <Container maxWidth=\"md\" className={classes.container}>\r\n                \r\n                <Grid container spacing={2}>\r\n                    {data && data.spends && data.spends.spend.map(spend => {\r\n                        return <GridItem key={spend.id}>\r\n                                    <Row\r\n                                        spend={spend}\r\n                                        remove={() => removeSpend(spend.id)}\r\n                                        edit={() => {\r\n                                            setOpenAdd(true);\r\n                                            setEditSpend(spend);\r\n                                        }}\r\n                                    />\r\n                                </GridItem>\r\n                    })}                    \r\n                </Grid>\r\n                <OpenIconSpeedDial actions={\r\n                    [{\r\n                        icon: <AddIcon />,\r\n                        name: \"Adicionar gasto\",\r\n                        onClick: () => setOpenAdd(true)\r\n                    },{\r\n                        icon: <SearchIcon />,\r\n                        name: \"Buscar gasto\",\r\n                        onClick: () => alert(\"Abrir interfaz para buscar gasto\")\r\n                    }]\r\n                }/>\r\n                \r\n            </Container>\r\n            <AddSpend\r\n                open={openAdd} \r\n                handleCancel={() => {\r\n                    setOpenAdd(false);\r\n                    setEditSpend(null);\r\n                }} \r\n                handleOk={ (spendId, spendtype, spendammount, date) => {\r\n                    saveSpend(spendId, spendtype, spendammount, date);\r\n                    setOpenAdd(false);\r\n                    setEditSpend(null);\r\n                }} \r\n                edit={editSpend}\r\n                \r\n            />\r\n            {Message}\r\n    </>\r\n\r\n}\r\nexport default SpendCmp;","import Spends from './spends.view';\r\nexport default Spends;"],"sourceRoot":""}