{"version":3,"sources":["App/Login/login.model.js","App/Login/login.view.js","App/Core/Header/header.view.js","App/Core/Header/index.js","App/Core/Menu/menu.view.js","App/Core/Menu/index.js","App/Core/Pages/Dashboard/dashboardQuery.js","App/Core/Pages/Dashboard/Search/filter.view.js","App/Core/Pages/Charts/chartContainer.view.js","App/Core/Pages/Dashboard/dashboard.view.js","App/Core/Pages/Dashboard/index.js","App/Core/core.view.js","App/App.js","App/utils.js","index.js","App/Core/Generics/customAddButton.view.js","App/Core/Generics/customSpeedDial.view.js","App/Core/Generics/messageAPI.js","App/Core/Generics/numberInput.view.js","App/Core/Generics/progressAPI.js","App/Core/Generics/utils.functions.js","App/Core/Generics/index.js","App/Core/Pages/WorkTypes/worktypeQuerys.js"],"names":["LoginContext","React","createContext","LoginQuery","gql","initialLoginState","loading","error","token","localStorage","getItem","username","avatarUrl","loginActions","loginReducer","state","action","type","payload","setItem","LoginProvider","props","useReducer","loginState","dispacher","useLazyQuery","queryDispatcher","results","useEffect","data","login","success","variables","password","useAsyncDispacher","Provider","value","children","Login","userInputRef","useRef","userPassRef","useContext","dispatch","useState","visibility","setVisivility","onChangeVisibilityPass","Dialog","open","DialogTitle","DialogContent","Grid","container","spacing","alignItems","item","TextField","label","inputRef","autoFocus","required","onKeyPress","onClick","DialogActions","Button","variant","color","current","useStyles","makeStyles","theme","menuButton","marginRight","title","flexGrow","avatar","backgroundColor","green","Menu","setMenuOpen","classes","CssBaseline","AppBar","position","Toolbar","IconButton","edge","className","aria-label","Typography","Avatar","alt","toUpperCase","srcSet","list","width","withRouter","openMenuState","closeMenu","location","selectedLink","inicio","icon","pathname","text","clientes","tipotrabajos","gastos","ingresos","Drawer","onClose","role","onKeyDown","List","Divider","ListItem","ListItemText","primary","to","style","textDecoration","button","ListItemIcon","DashBoardData","formControl","minWidth","marginTop","marginBottom","chip","marginLeft","switch","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","FilterDialog","handleClose","firstDate","handleIniDateChange","lastDate","handleEndDateChange","categoryState","setCategoryState","wtCategory","useDates","setUseDate","aria-labelledby","id","DialogContentText","utils","DateFnsUtils","justify","DialogProps","disableToolbar","format","margin","onChange","KeyboardButtonProps","disabled","Switch","checked","inputProps","FormControl","InputLabel","Select","labelId","multiple","event","target","input","Input","renderValue","selected","chips","map","wtCat","worktypecategory","find","wtc","Chip","key","name","size","MenuItem","Checkbox","indexOf","height","borderRadius","appBar","HtmlTooltip","withStyles","tooltip","maxWidth","fontSize","typography","pxToRem","Tooltip","Transition","forwardRef","ref","Slide","direction","ChartContainer","htmlHelpContent","fullScreen","TransitionComponent","Fragment","arrow","LazyIngressChart","lazy","LazyWorkTypeChart","LazyCalendar","cardGastos","palette","light","getContrastText","cardCantidadGastos","dark","cardPorciento","cardDias","cursor","boxShadow","cardGanancias","info","cardIngresos","cardCantidadIngresos","fab","bottom","right","ReportDoubleSquare","cardStyle","contentStyle","mainText","mainconcept","mainchilds","mainTextPrefix","mainTextSufix","middleText","middleconcept","middlechilds","middleTextPrefix","middleTextSufix","secondaryText","secondaryconcept","secondarychilds","secondaryTextPrefix","secondaryTextSufix","xs","sm","md","lg","Card","elevation","square","CardContent","textAlign","start","end","duration","prefix","suffix","ReportSquare","concept","childs","Dashboard","moment","locale","utc","setLastDateSt","subtract","setFirstDateSt","mounted","setMounted","openedIngress","setOpenedIngress","openedCantTrabajos","setOpenedCantTrab","openDays","setOpenDays","wtcategoryIds","before","after","useQuery","undefined","refetch","getWorkTypeCategories","filterOpen","setFilterOpen","useProgress","Progress","setShowProgress","totalIngresos","totalIngresses","total","totalGastos","totalSpends","ganancias","porciento","dataIngresses","ingresses","ingress","dataSpends","spends","spend","cantIngresses","length","cantSpends","worksTypeMap","Map","dataMap","i","dateKey","date","ingressAmount","workTypeKey","workType","has","set","get","ammount","toDate","diasTrabajados","diasNoTrabajados","currentDate","stopDate","add","porcientoDias","acumDataIngress","values","sort","a","b","workTypesQuantity","resp","Container","paddingBottom","toFixed","alert","fallback","Skeleton","chartIngressDate","Fab","formatedDate","toISOString","AsyncClientesPage","AsyncWorkTypesPage","AsyncGastosPage","AsyncIngresosPage","Core","openMenu","useCallback","LinearProgress","Header","path","component","exact","render","Main","AppCmp","client","ApolloClient","uri","headers","authorization","App","ReactDOM","document","getElementById","speedDial","OpenIconSpeedDial","actions","setOpen","root","SpeedDial","ariaLabel","SpeedDialIcon","openIcon","onOpen","SpeedDialAction","tooltipTitle","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","useStyles1","amber","iconVariant","opacity","message","display","MySnackbarContentWrapper","other","Icon","SnackbarContent","clsx","aria-describedby","Message","memo","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","useMessage","initialState","setState","setMessage","msg","reason","NumberFormatCustom","getInputRef","onValueChange","thousandSeparator","isNumericString","NumberInput","handleChange","border","padding","flexDirection","verticalAlign","InputProps","inputComponent","onFocus","select","CustomProgress","show","setShow","ProgressElement","getStringDate","ISODate","Date","day","getDay","dayOfMonth","getDate","month","getMonth","year","getFullYear","editWorkTypeMutation","removeWorkTypeMutation","getWorkTypes"],"mappings":"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","file":"static/js/main.32291438.chunk.js","sourcesContent":["import React, {useReducer, useEffect} from 'react';\r\nimport {useLazyQuery} from 'react-apollo';\r\nimport {gql} from 'apollo-boost';\r\n\r\nconst LoginContext = React.createContext(null);\r\n\r\nconst LoginQuery = gql`\r\n    query($username:String!, $password:String!) {\r\n        login(username:$username, password: $password) {\r\n            success\r\n            message\r\n            token\r\n            username\r\n            avatarUrl\r\n        }\r\n    }\r\n`;\r\n\r\nconst initialLoginState = {\r\n    loading: false,\r\n    error: false,\r\n    token: localStorage.getItem('token') || null,\r\n    username: localStorage.getItem('username') || null,\r\n    avatarUrl: localStorage.getItem('avatarUrl') || null\r\n}\r\n\r\nconst loginActions = {\r\n    START_LOGIN: 'START_LOGIN',\r\n    ERROR_LOGIN: 'ERROR_LOGIN',\r\n    SUCCESSFULL_LOGIN: 'SUCCESSFULL_LOGIN',\r\n    START_LOGOUT: 'START_LOGOUT',\r\n    TRY_LOGIN: 'TRY_LOGIN'\r\n}\r\n\r\n\r\n\r\nconst startLoginAction = () => {\r\n    return {\r\n        ...initialLoginState,\r\n        loading: true\r\n    }\r\n}\r\nconst errorLogin = () => {\r\n    return {\r\n        ...initialLoginState,\r\n        error: true\r\n    }\r\n}\r\n\r\nconst successfullLoginAction = (state, payload) => {\r\n\r\n    localStorage.setItem('token', payload.token);\r\n    localStorage.setItem('username', payload.username);\r\n    localStorage.setItem('avatarUrl', payload.avatarUrl);    \r\n\r\n    return {\r\n        ...initialLoginState,\r\n        token: payload.token,\r\n        username: payload.username,\r\n        avatarUrl: payload.avatarUrl\r\n    }\r\n}\r\n\r\nconst startLogout = () => {\r\n    return initialLoginState;\r\n}\r\n\r\nconst loginReducer = (state, action) => {\r\n    switch(action.type){\r\n        case loginActions.START_LOGIN:\r\n            return startLoginAction(state, action.payload);\r\n        case loginActions.ERROR_LOGIN:\r\n            return errorLogin(state, action.payload);\r\n        case loginActions.SUCCESSFULL_LOGIN:\r\n            return successfullLoginAction(state, action.payload);\r\n        case loginActions.START_LOGOUT:\r\n            return startLogout(state, action.payload);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst useAsyncDispacher = dispacher => {\r\n    \r\n    const [queryDispatcher, results] = useLazyQuery(LoginQuery);\r\n    \r\n    useEffect(() => {\r\n        \r\n        if(results.loading){\r\n            dispacher({\r\n                type: loginActions.START_LOGIN\r\n            });\r\n        } else if((results.error && !results.loading)){\r\n            dispacher({\r\n                type: loginActions.ERROR_LOGIN\r\n            });\r\n        } \r\n        \r\n        if(results.data && !results.error && !results.loading){\r\n            if(!results.data.login.success){\r\n                dispacher({\r\n                    type: loginActions.ERROR_LOGIN\r\n                })\r\n            }else{\r\n                dispacher({\r\n                    type: loginActions.SUCCESSFULL_LOGIN,\r\n                    payload: results.data.login\r\n                })\r\n            }\r\n            \r\n        }\r\n    }, [results, dispacher]);\r\n\r\n\r\n    return action => {\r\n        \r\n        if(action.type === loginActions.TRY_LOGIN){\r\n            \r\n            queryDispatcher({\r\n                variables: {\r\n                    username: action.payload.username,\r\n                    password: action.payload.password\r\n                }\r\n            });\r\n            action.type = loginActions.START_LOGIN;\r\n        }\r\n\r\n        dispacher(action);\r\n        \r\n        \r\n    }\r\n} \r\n\r\nconst LoginProvider = props => {\r\n    \r\n    const [loginState, dispatch] = useReducer(loginReducer, initialLoginState);\r\n    const dispacher = useAsyncDispacher(dispatch);\r\n\r\n    return <LoginContext.Provider value={[loginState, dispacher]}>\r\n                {props.children}\r\n            </LoginContext.Provider>\r\n\r\n}\r\n\r\nexport default LoginProvider;\r\nexport {loginActions, LoginContext};","import React, {useRef, useState, useContext} from 'react';\r\n\r\nimport { \r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    TextField,\r\n    Grid,\r\n    Button,\r\n    DialogActions\r\n} from '@material-ui/core';\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport VpnKey from '@material-ui/icons/VpnKey';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nimport {LoginContext, loginActions} from './login.model';\r\n\r\nconst Login = props => {\r\n\r\n    const userInputRef = useRef(null);\r\n    const userPassRef = useRef(null);\r\n    \r\n    const [loginState, dispatch] = useContext(LoginContext);\r\n    const [visibility, setVisivility] = useState(false);\r\n\r\n    const onChangeVisibilityPass = () => {\r\n        setVisivility(state => !state);\r\n    }\r\n\r\n    const keyPressInPasswordInput = () => {\r\n\r\n    }\r\n\r\n    return <>\r\n        <Dialog open>\r\n                <DialogTitle>LOGIN</DialogTitle>\r\n                <DialogContent>\r\n                \r\n                    <Grid container spacing={1} alignItems='flex-end'>\r\n                        <Grid item>\r\n                            <AccountCircle />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField \r\n                                label='Usuario' \r\n                                inputRef={userInputRef} \r\n                                error={loginState.error} \r\n                                autoFocus \r\n                                required \r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    <Grid container spacing={1} alignItems='flex-end'>\r\n                        <Grid item>\r\n                            <VpnKey />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <TextField \r\n                                label='Contraseña' \r\n                                type={visibility ? 'text' : 'password'} \r\n                                inputRef={userPassRef} \r\n                                error={loginState.error} \r\n                                required\r\n                                onKeyPress={keyPressInPasswordInput}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {visibility ? <Visibility onClick={onChangeVisibilityPass}/> : <VisibilityOff onClick={onChangeVisibilityPass}/> }\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>                    \r\n                    <Button variant='text' color=\"primary\" \r\n                        onClick={() => {\r\n                            dispatch({\r\n                                type: loginActions.TRY_LOGIN, \r\n                                payload: {\r\n                                     username: userInputRef.current.value,\r\n                                     password: userPassRef.current.value\r\n                                }\r\n                            })\r\n                        }}  \r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n    </>\r\n}\r\n\r\nexport default Login;","import React, {useContext} from 'react';\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n    makeStyles,\r\n    Avatar,\r\n    CssBaseline\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {LoginContext} from '../../Login/login.model';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    avatar: {\r\n      backgroundColor: green[400],\r\n  }\r\n  }));\r\n\r\n \r\n\r\nconst Menu = props => {\r\n\r\n    const {setMenuOpen} = props;\r\n    const [loginState] = useContext(LoginContext);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n         <CssBaseline />  \r\n            <AppBar position=\"sticky\">\r\n              <Toolbar>\r\n                <IconButton \r\n                  edge=\"start\" \r\n                  className={classes.menuButton} \r\n                  color=\"inherit\" \r\n                  aria-label=\"menu\"\r\n                  onClick={setMenuOpen}>\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  Manicury\r\n                </Typography>              \r\n                  <div>\r\n                      <Avatar \r\n                        className={classes.avatar}\r\n                        alt={loginState.username.toUpperCase()}\r\n                        srcSet={loginState.username.toUpperCase()}\r\n                      />\r\n                  </div>              \r\n              </Toolbar>\r\n            </AppBar>          \r\n        </>\r\n      );\r\n\r\n}\r\nexport default Menu;","import Menu from './header.view';\r\nexport default Menu;","import React from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {\r\n    Drawer,\r\n    List, \r\n    ListItem, \r\n    ListItemIcon, \r\n    ListItemText, \r\n    Divider,\r\n    Typography,\r\n    makeStyles\r\n} from '@material-ui/core'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\r\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nconst useStyles = makeStyles({\r\n    list: {\r\n      width: 250,\r\n    }\r\n  });\r\n\r\nconst Menu = props => {\r\n\r\n    const {openMenuState, closeMenu, location} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const selectedLink = {\r\n      inicio: {\r\n        icon: location.pathname === '/' && {color: \"primary\"},\r\n        text: location.pathname === '/' || {color:\"textPrimary\"} \r\n      },\r\n      clientes: {\r\n        icon: location.pathname === '/clientes' && {color: \"primary\"},\r\n        text: location.pathname === '/clientes' || {color:\"textPrimary\"} \r\n      },\r\n      tipotrabajos: {\r\n        icon: location.pathname === '/tipotrabajos' && {color: \"primary\"},\r\n        text: location.pathname === '/tipotrabajos' || {color:\"textPrimary\"} \r\n      },\r\n      gastos: {\r\n        icon: location.pathname === '/gastos' && {color: \"primary\"},\r\n        text: location.pathname === '/gastos' || {color:\"textPrimary\"} \r\n      },\r\n      ingresos: {\r\n        icon: location.pathname === '/ingresos' && {color: \"primary\"},\r\n        text: location.pathname === '/ingresos' || {color:\"textPrimary\"} \r\n      }\r\n    } \r\n\r\n    const sideList = side => (\r\n        <div\r\n          className={classes.list}\r\n          role=\"presentation\"\r\n          onClick={closeMenu}\r\n          onKeyDown={closeMenu}\r\n        >\r\n          <List>\r\n            <Divider />\r\n            <ListItem >\r\n                <ListItemText primary=\"Menú\" />\r\n            </ListItem>\r\n            <Divider />\r\n            \r\n            <Link to=\"/\" style={{textDecoration:\"none\"}}>\r\n              <ListItem button>\r\n                  <ListItemIcon><HomeIcon {...selectedLink.inicio.icon}/></ListItemIcon>\r\n                  <ListItemText>\r\n                      <Typography {...selectedLink.inicio.text}>\r\n                          Inicio\r\n                      </Typography>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n\r\n            <Link to=\"/clientes\" style={{textDecoration:\"none\"}}>\r\n              <ListItem button>\r\n                  <ListItemIcon><GroupIcon {...selectedLink.clientes.icon}/></ListItemIcon>\r\n                  <ListItemText>\r\n                      <Typography {...selectedLink.clientes.text}>\r\n                          Clientes\r\n                      </Typography>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n\r\n            <Link to=\"/tipotrabajos\" style={{textDecoration:\"none\"}}>\r\n              <ListItem button>\r\n                  <ListItemIcon><AccountTreeIcon {...selectedLink.tipotrabajos.icon}/></ListItemIcon>\r\n                  <ListItemText>\r\n                      <Typography {...selectedLink.tipotrabajos.text}>\r\n                          Tipos de trabajo\r\n                      </Typography>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n\r\n            <Link to=\"/gastos\" style={{textDecoration:\"none\"}}>\r\n              <ListItem button>\r\n                  <ListItemIcon><MoneyOffIcon {...selectedLink.gastos.icon}/></ListItemIcon>\r\n                  <ListItemText>\r\n                      <Typography {...selectedLink.gastos.text}>\r\n                          Gastos\r\n                      </Typography>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n\r\n            <Link to=\"/ingresos\" style={{textDecoration:\"none\"}}>\r\n              <ListItem button>\r\n                  <ListItemIcon><AttachMoneyIcon {...selectedLink.ingresos.icon}/></ListItemIcon>\r\n                  <ListItemText>\r\n                      <Typography {...selectedLink.ingresos.text}>\r\n                        Ingresos\r\n                      </Typography>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n            \r\n\r\n          </List>\r\n        </div>\r\n      );\r\n\r\n    return <Drawer open={openMenuState} onClose={closeMenu}>\r\n        {sideList('left')}\r\n      </Drawer>\r\n    ;\r\n\r\n}\r\nexport default withRouter(Menu);","import Menu from './menu.view';\r\nexport default Menu;","import {gql} from 'apollo-boost';\r\n\r\nconst DashBoardData = gql`\r\n    query($worktypeIds: [ID], $wtcategoryIds: [ID], $before: Date, $after:Date) {\r\n        totalSpends(dateRange: {before: $before, after: $after}){\r\n            success\r\n            message\r\n            total\r\n        }\r\n        totalIngresses(worktypeIds: $worktypeIds, wtcategoryIds: $wtcategoryIds, dateRange: {before: $before, after: $after}, ){\r\n            success\r\n            message\r\n            total\r\n        }\r\n        ingresses(dateRange: {before:$before, after: $after}, \r\n            pagination: {start: null, limit: null}, worktypeIds: $worktypeIds, wtcategoryIds: $wtcategoryIds){\r\n            success\r\n            message\r\n            ingress{\r\n                ingressAmount\r\n                date\r\n                workType{\r\n                    id\r\n                    name\r\n                    category{\r\n                        id\r\n                        name\r\n                        color\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        spends(dateRange: {before:$before, after: $after}, , pagination: {start: null, limit: null}){\r\n            success\r\n            message\r\n            spend{\r\n                spendamount\r\n                date\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport {DashBoardData}","import React from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    Grid,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    DialogActions,\r\n    Button,\r\n    Input,\r\n    Chip,\r\n    Checkbox,\r\n    Switch,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n  } from '@material-ui/pickers';\r\n\r\n\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        minWidth: 120,\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(0.5)\r\n    },\r\n    chip: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    switch: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n/*function getStyles(name, personName, theme) {\r\n    return {\r\n      fontWeight:\r\n        personName.indexOf(name) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }*/\r\n\r\nconst FilterDialog = props => {\r\n\r\n    const classes = useStyles();\r\n    const {open, handleClose,\r\n        firstDate, handleIniDateChange, lastDate, handleEndDateChange,\r\n        categoryState, setCategoryState, wtCategory,\r\n        useDates, setUseDate\r\n    } = props;\r\n\r\n    return <Dialog open={open} /*onClose={handleClose}*/ aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Búsqueda</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Para poder filtrar la información, utilce los siguientes campos.\r\n                    </DialogContentText>\r\n                \r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <Grid container justify=\"space-around\">\r\n                            <KeyboardDatePicker\r\n                                DialogProps\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                margin=\"normal\"\r\n                                //id=\"date-picker-inline\"\r\n                                label=\"Inicio\"\r\n                                value={firstDate}                            \r\n                                onChange={handleIniDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                                disabled={!useDates}\r\n                            />\r\n                            <KeyboardDatePicker\r\n                                disableToolbar\r\n                                variant=\"inline\"\r\n                                format=\"dd/MM/yyyy\"\r\n                                margin=\"normal\"\r\n                                //id=\"date-picker-inline\"\r\n                                label=\"Fin\"\r\n                                value={lastDate}\r\n                                \r\n                                onChange={handleEndDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                                disabled={!useDates}\r\n                            />\r\n                            \r\n                            <Switch\r\n                                \r\n                                checked={useDates}\r\n                                onChange={() => setUseDate(!useDates)}\r\n                                value={useDates} \r\n                                color=\"primary\"\r\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                className={classes.switch}\r\n                            />\r\n\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel id=\"mutiple-category-label\">Categorías</InputLabel>\r\n                                <Select\r\n                                    labelId=\"mutiple-category-label\"\r\n                                    id=\"mutiple-category\"\r\n                                    multiple\r\n                                    value={categoryState}\r\n                                    \r\n                                    onChange={event => setCategoryState(event.target.value)}\r\n                                    input={<Input id=\"select-multiple-chip\" />}\r\n                                    renderValue={selected => (  \r\n                                        <div className={classes.chips}>\r\n                                        {\r\n                                            selected.map(value => {\r\n\r\n                                                const wtCat = wtCategory.worktypecategory.worktypecategory.find(wtc => wtc.id === value);\r\n                                                return (\r\n                                                    <Chip key={value} label={wtCat.name} className={classes.chip} \r\n                                                        size='small'\r\n                                                        style={{backgroundColor: wtCat.color}}\r\n                                                    />\r\n                                                )\r\n                                        })}\r\n                                        </div>\r\n                                    )}\r\n                                    MenuProps={MenuProps}\r\n                                >\r\n                                    {\r\n                                        wtCategory && wtCategory.worktypecategory && wtCategory.worktypecategory.worktypecategory.map(wtc => {\r\n                                            return <MenuItem value={wtc.id} key={wtc.id} /*style={getStyles(name, personName, theme)}*/ >\r\n                                                <Checkbox checked={categoryState.indexOf(wtc.id) > -1} />\r\n                                                <div style={{backgroundColor: wtc.color, margin: '0 1rem', width: \"1rem\", height: \"1rem\", borderRadius: \"50%\"}}/>                                             \r\n                                                {wtc.name}   \r\n                                            </MenuItem>\r\n                                        })\r\n                                    }                                    \r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </MuiPickersUtilsProvider>\r\n\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>;\r\n\r\n}\r\nexport default FilterDialog;","import React from 'react';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\nimport {\r\n    Dialog, AppBar, Toolbar, IconButton, Typography, Slide, Tooltip\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst HtmlTooltip = withStyles(theme => ({\r\n    tooltip: {\r\n      //backgroundColor: '#f5f5f9',\r\n      //color: 'rgba(0, 0, 0, 0.87)',\r\n      maxWidth: 500,\r\n      fontSize: theme.typography.pxToRem(12),\r\n      //border: '1px solid #dadde9',\r\n    },\r\n  }))(Tooltip);\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst ChartContainer = props => {\r\n\r\n    const { open, handleClose, title, children, htmlHelpContent } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        {title}\r\n                    </Typography>\r\n                    <div>\r\n                        <HtmlTooltip \r\n                            title={\r\n                                <React.Fragment>\r\n                                    <Typography color=\"inherit\">{title}</Typography>\r\n                                    {htmlHelpContent}\r\n                                </React.Fragment>\r\n                            }\r\n                            arrow={true}\r\n                        >\r\n                            <LiveHelpIcon />\r\n                        </HtmlTooltip>\r\n                  </div>                \r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n            {children}\r\n\r\n        </Dialog>\r\n\r\n    );\r\n}\r\n\r\nexport default ChartContainer;","import 'date-fns';\r\nimport React, {useEffect, useState, Suspense} from 'react';\r\nimport {useQuery} from 'react-apollo';\r\n\r\nimport {\r\n    Container,\r\n    Typography,\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    makeStyles,\r\n    Tooltip,\r\n    Fab\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport {useProgress} from '../../Generics';\r\nimport {DashBoardData} from './dashboardQuery';\r\nimport {getWorkTypeCategories} from '../WorkTypes/worktypeQuerys';\r\nimport CountUp from 'react-countup';\r\n\r\nimport FilterView from './Search/filter.view';\r\nimport ChartContainer from '../Charts/chartContainer.view';\r\n\r\nconst LazyIngressChart = React.lazy(() => import('../Charts/Ingresses/IngressChart.view'));\r\nconst LazyWorkTypeChart = React.lazy(() => import('../Charts/Worktypes/worktypesChart.view'));\r\nconst LazyCalendar = React.lazy(() => import('../Charts/Days/calendar.view'));\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    cardGastos: {\r\n        backgroundColor: theme.palette.error.light,\r\n        color: theme.palette.getContrastText(theme.palette.error.light)    \r\n    },\r\n    cardCantidadGastos: {\r\n        backgroundColor: theme.palette.error.dark,\r\n        color: theme.palette.getContrastText(theme.palette.error.dark)    \r\n    },\r\n    cardPorciento: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.getContrastText(theme.palette.primary.light)\r\n    },\r\n    cardDias: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.getContrastText(theme.palette.primary.dark),\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            boxShadow: '0px 5px 10px -1px rgba(0,0,0,0.5), 0px 1px 1px 0px rgba(0,0,0,0.5), 0px 1px 3px 0px rgba(0 ,0,0,0.5)'\r\n        }\r\n    },\r\n    cardGanancias: {\r\n        backgroundColor: theme.palette.info.light,\r\n        color: theme.palette.getContrastText(theme.palette.info.light)  \r\n    },\r\n    cardIngresos: {\r\n        backgroundColor: theme.palette.success.light,\r\n        color: theme.palette.getContrastText(theme.palette.success.light),\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            boxShadow: '0px 5px 10px -1px rgba(0,0,0,0.5), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0 ,0,0,0.12)'\r\n        }  \r\n    },\r\n    cardCantidadIngresos: {\r\n        backgroundColor: theme.palette.success.dark,\r\n        color: theme.palette.getContrastText(theme.palette.success.dark),\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            boxShadow: '0px 5px 10px -1px rgba(0,0,0,0.5), 0px 1px 1px 0px rgba(0,0,0,0.50), 0px 1px 3px 0px rgba(0 ,0,0,0.50)'\r\n        }   \r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst ReportDoubleSquare = props => {\r\n\r\n    const {cardStyle, contentStyle, \r\n            \r\n            mainText, mainconcept, mainchilds, \r\n            mainTextPrefix = '', mainTextSufix = '', \r\n\r\n            middleText, middleconcept, middlechilds, \r\n            middleTextPrefix = '', middleTextSufix = '', \r\n            \r\n            secondaryText, secondaryconcept, secondarychilds, \r\n            secondaryTextPrefix = '', secondaryTextSufix = '', \r\n\r\n            onClick, size = 2} = props;\r\n\r\n    return <Grid item xs={12}  sm={size * 4} md={size * 4} lg={size * 3} onClick={onClick}> \r\n                <Card elevation={0} square className={cardStyle}>\r\n                    <CardContent style={contentStyle}>\r\n\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"space-between\"\r\n                            alignItems=\"baseline\"\r\n                        >\r\n                            <Grid item>\r\n                                <Typography variant=\"h3\" style={{textAlign: \"left\"}}>\r\n                                \r\n                                <CountUp \r\n                                    start={0} \r\n                                    end={mainText}\r\n                                    duration={2} \r\n                                    prefix={mainTextPrefix}\r\n                                    suffix={mainTextSufix}\r\n                                />\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" style={{textAlign: \"left\"}}>\r\n                                    {mainconcept}\r\n                                </Typography>\r\n                                {mainchilds}\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"h3\" style={{textAlign: \"center\"}}>\r\n                                <CountUp \r\n                                    start={0} \r\n                                    end={middleText}\r\n                                    duration={2} \r\n                                    prefix={middleTextPrefix}\r\n                                    suffix={middleTextSufix}\r\n                                />\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" style={{textAlign: \"center\"}}>\r\n                                    {middleconcept}\r\n                                </Typography>\r\n                                {middlechilds}\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Typography variant=\"h3\" style={{textAlign: \"right\"}}>\r\n                                \r\n                                <CountUp \r\n                                    start={0} \r\n                                    end={secondaryText}\r\n                                    duration={2} \r\n                                    prefix={secondaryTextPrefix}\r\n                                    suffix={secondaryTextSufix}\r\n                                />\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" style={{textAlign: \"right\"}}>\r\n                                    {secondaryconcept}\r\n                                </Typography>\r\n                                {secondarychilds}\r\n                            </Grid>\r\n                        </Grid>\r\n                    \r\n                        \r\n                    </CardContent>            \r\n                </Card>\r\n            </Grid>;\r\n}\r\n\r\nconst ReportSquare = props => {\r\n\r\n    const {cardStyle, contentStyle, mainText, concept, childs, mainTextPrefix = '', mainTextSufix = '', onClick, size = 1} = props;\r\n\r\n    return <Grid item xs={size * 12}  sm={size * 4} md={size * 4} lg={size * 3} onClick={onClick}> \r\n                <Card elevation={0} square className={cardStyle}>\r\n                    <CardContent style={contentStyle}>\r\n                    \r\n                        <Typography variant=\"h3\" style={{textAlign: \"right\"}}>       \r\n                                <CountUp \r\n                                    start={0} \r\n                                    end={mainText}\r\n                                    duration={2} \r\n                                    prefix={mainTextPrefix}\r\n                                    suffix={mainTextSufix}\r\n                                />\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" style={{textAlign: \"right\"}}>\r\n                            {concept}\r\n                        </Typography>\r\n                        {childs}\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>;\r\n}\r\n\r\nconst Dashboard = props => {\r\n\r\n    moment.locale('es');\r\n    moment.utc(false);\r\n\r\n    const [lastDate, setLastDateSt] = useState(moment());\r\n    const [firstDate, setFirstDateSt] = useState(moment(lastDate).subtract(1, 'month'));\r\n    const [useDates, setUseDate] = useState(true);\r\n\r\n    const handleIniDateChange = date => {        \r\n        const formatedDate = date.toISOString();\r\n        setFirstDateSt(moment(formatedDate));\r\n    };\r\n    const handleEndDateChange = date => {\r\n        setLastDateSt(moment(date));\r\n    };\r\n\r\n    const [mounted, setMounted] = useState(true)\r\n    const [openedIngress, setOpenedIngress] = useState(false);\r\n    const [openedCantTrabajos, setOpenedCantTrab] = useState(false);\r\n    const [openDays, setOpenDays] = useState(false);\r\n    \r\n    //const [categoryState, setCategoryState] = useState(null);\r\n    const [categoryState, setCategoryState] = useState([]);\r\n\r\n    const variables = {\r\n        wtcategoryIds: categoryState\r\n    };\r\n    if(useDates){\r\n        variables.before = moment(lastDate).format('YYYY-MM-DD');\r\n        variables.after =  moment(firstDate).format('YYYY-MM-DD');\r\n    }\r\n    const {data, loading, refetch, error } = useQuery(DashBoardData, {variables: {\r\n        before: useDates ? moment(lastDate).format('YYYY-MM-DD'): undefined,\r\n        after: useDates ? moment(firstDate).format('YYYY-MM-DD'): undefined,\r\n        //wtcategoryIds: categoryState ? [categoryState] : []\r\n        wtcategoryIds: categoryState\r\n    }});\r\n    const {data: wtCategory} = useQuery(getWorkTypeCategories);\r\n    const [filterOpen, setFilterOpen] = useState(false);\r\n    \r\n    const filterHandleClose = () => {\r\n        setFilterOpen(false);\r\n    }\r\n    \r\n\r\n    const [Progress, setShowProgress] = useProgress(false);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if(loading)\r\n            setShowProgress(true);\r\n        else\r\n            setShowProgress(false);\r\n    }, [loading, setShowProgress]);\r\n\r\n    useEffect(() => {\r\n        if(mounted)\r\n            refetch();\r\n        return () => {\r\n            setMounted(false);\r\n        }    \r\n    }, [mounted, refetch, lastDate, firstDate, useDates, categoryState]);\r\n\r\n    const totalIngresos = data && data.totalIngresses && data.totalIngresses.success ? data.totalIngresses.total : 0; \r\n    \r\n    const totalGastos = data && data.totalSpends && data.totalSpends.success ? data.totalSpends.total : 0; \r\n    const ganancias = totalIngresos - totalGastos;\r\n    const porciento = totalIngresos === 0 ? 0 : ganancias * 100 / totalIngresos;\r\n    \r\n    \r\n    const dataIngresses = data && data.ingresses && data.ingresses.success ? data.ingresses.ingress : [];\r\n    const dataSpends = data && data.spends && data.spends.success ? data.spends.spend : [];\r\n    const cantIngresses = dataIngresses.length;\r\n    const cantSpends = dataSpends.length;\r\n    \r\n    \r\n    const worksTypeMap = new Map();\r\n    const dataMap = new Map();\r\n    let i = 0;\r\n    while(i < dataIngresses.length){\r\n        const dateKey = moment(dataIngresses[i].date).format('L');\r\n        const ingressAmount = dataIngresses[i].ingressAmount;\r\n\r\n        const workTypeKey = dataIngresses[i].workType.id;\r\n        if(worksTypeMap.has(workTypeKey)){\r\n            worksTypeMap.set(workTypeKey, {\r\n                ...worksTypeMap.get(workTypeKey),\r\n                ingress: worksTypeMap.get(workTypeKey).ingress + ingressAmount,\r\n                ammount: worksTypeMap.get(workTypeKey).ammount + 1 \r\n            });\r\n        }else{\r\n            worksTypeMap.set(workTypeKey, {\r\n                id: workTypeKey,\r\n                name: dataIngresses[i].workType.name,\r\n                ingress: ingressAmount,\r\n                ammount: 1\r\n            });\r\n        }\r\n\r\n        if(dataMap.has(dateKey)){\r\n            const ingress = dataMap.get(dateKey).ingressAmount + ingressAmount;\r\n            const date = moment(dataIngresses[i].date).toDate();\r\n            dataMap.set(dateKey, {\r\n                date: date, ingressAmount: ingress\r\n            })\r\n        }else{\r\n            dataMap.set(dateKey, {\r\n                date: moment(dataIngresses[i].date).toDate(), \r\n                ingressAmount: ingressAmount\r\n            });\r\n        }\r\n        i++;\r\n    }\r\n\r\n    let diasTrabajados = 0;\r\n    let diasNoTrabajados = 0;\r\n    let currentDate = moment(firstDate);\r\n    const stopDate = moment(lastDate); \r\n    while(currentDate <= stopDate){\r\n        const dateKey = currentDate.format('L');\r\n        const ingressAmount = 0;\r\n\r\n        if(!dataMap.has(dateKey)){\r\n            dataMap.set(dateKey, {\r\n                date: currentDate.toDate(),\r\n                ingressAmount\r\n            });\r\n            diasNoTrabajados++;\r\n        }else{\r\n            diasTrabajados++;\r\n        }\r\n        currentDate = moment(currentDate).add(1, 'days');\r\n    }\r\n    const porcientoDias =  100 *  diasTrabajados / (diasTrabajados + diasNoTrabajados);\r\n    \r\n    const acumDataIngress = [...dataMap.values()].sort((a,b) => {\r\n        if(a.date < b.date) return -1\r\n        if(a.date > b.date) return 1;\r\n        return 0;\r\n    });\r\n    const workTypesQuantity = [...worksTypeMap.values()];\r\n\r\n    const resp = (\r\n        <>\r\n            {Progress}            \r\n            <Container maxWidth=\"md\">\r\n                \r\n\r\n                <Grid container spacing={2} style={{marginTop: 10}}>\r\n                    <ReportSquare \r\n                        cardStyle={classes.cardIngresos}\r\n                        mainText={totalIngresos}\r\n                        mainTextPrefix='$'\r\n                        concept=\"Ingresos\"\r\n                        onClick={() => setOpenedIngress(true)}                        \r\n                    />\r\n                    <ReportSquare \r\n                        cardStyle={classes.cardGastos}\r\n                        mainText={totalGastos}\r\n                        mainTextPrefix='-$'\r\n                        concept=\"Gastos\"\r\n                    />\r\n                    <ReportSquare \r\n                        cardStyle={classes.cardGanancias}\r\n                        mainText={ganancias}\r\n                        mainTextPrefix='$'\r\n                        concept={ganancias > 0 ? \"Ganancias\" : \"Pérdidas\"}\r\n                    />\r\n                    <ReportSquare \r\n                        cardStyle={classes.cardPorciento}\r\n                        contentStyle={{paddingBottom: '16px'}}\r\n                        mainTextSufix='%'\r\n                        mainText={porciento}\r\n                        concept=\"Ganancias\"\r\n                        childs={<Tooltip title={`${porciento.toFixed(2)}% de ingresos sobre gastos`}>\r\n                                    <div style={{height: 7, width: '100%', backgroundColor: 'white'}}>\r\n                                        <div style={{height: 7, width: `${porciento}%`, backgroundColor: '#64b5f6'}}></div>\r\n                                    </div>  \r\n                                </Tooltip>\r\n                        }\r\n                    />\r\n                    <ReportSquare \r\n                        cardStyle={classes.cardCantidadIngresos}\r\n                        mainText={cantIngresses}\r\n                        mainTextPrefix=''\r\n                        concept=\"Trabajos realizados\"\r\n                        onClick={() => setOpenedCantTrab(true)}                        \r\n                    />  \r\n                    \r\n                    <ReportSquare \r\n                        cardStyle={classes.cardCantidadGastos}\r\n                        mainText={cantSpends}\r\n                        concept=\"Gastos realizados\"\r\n                        onClick={() => alert('mostrar')}\r\n                    /> \r\n                    <ReportDoubleSquare \r\n                        cardStyle={classes.cardDias}\r\n                        contentStyle={{paddingBottom: '16px'}}\r\n                        mainText={diasTrabajados}\r\n                        mainconcept=\"Días trabajados\"\r\n                        \r\n                        middleText={porcientoDias}\r\n                        middleTextSufix=\"%\"\r\n                        middleconcept=\"Porciento\"\r\n                        middlechilds={<Tooltip title={`${porcientoDias.toFixed(2)}% para de dias trabajados.`}>\r\n                                    <div style={{height: 7, width: '100%', backgroundColor: 'white'}}>\r\n                                        <div style={{height: 7, width: `${porcientoDias}%`, backgroundColor: '#64b5f6'}}></div>\r\n                                    </div>  \r\n                                </Tooltip>\r\n                        }\r\n\r\n                        secondaryText={diasNoTrabajados}\r\n                        secondaryconcept=\"Días no trabajados\"\r\n\r\n                        onClick={() => setOpenDays(true)}\r\n                        \r\n                    /> \r\n                </Grid>\r\n                \r\n\r\n                <ChartContainer\r\n                    open={openedIngress}\r\n                    handleClose={() => setOpenedIngress(false)}\r\n                    title=\"Ingresos del período\"\r\n                    htmlHelpContent={<>\r\n                        <p>{\"En esta gráfica se muestran los ingresos diario/semanles/mensuales/anuales\"}</p>\r\n                    </>}\r\n                >\r\n                    <Suspense fallback={\r\n                        <Skeleton width={'100%'} height={500}>\r\n                            <EqualizerIcon style={{width: '100%', height: '100%'}} color=\"disabled\"/>\r\n                        </Skeleton>\r\n                    }>\r\n                        <LazyIngressChart \r\n                            chartIngressDate={acumDataIngress}\r\n                        />\r\n                    </Suspense>\r\n                </ChartContainer>\r\n\r\n                <ChartContainer\r\n                    open={openedCantTrabajos}\r\n                    handleClose={() => setOpenedCantTrab(false)}\r\n                    title=\"Tipos de trabajos\"\r\n                    htmlHelpContent={<>\r\n                        <ul>\r\n                            <li><b>{\"Gráfica por ingresos\"}</b><br/>{\"En esta gráfica se muestran por cada tipo de trabajo los ingresos realizados\"}</li>\r\n                            <li><b>{\"Gráfica por cantidades\"}</b><br/>{\"En esta gráfica se muestran por cada tipo de trabajo la cantidad realizada\"}</li>\r\n                        </ul>\r\n                    </>}\r\n                >\r\n                    <Suspense fallback={\r\n                        <Skeleton width={'100%'} height={500}>\r\n                            <EqualizerIcon style={{width: '100%', height: '100%'}} color=\"disabled\"/>\r\n                        </Skeleton>\r\n                    }>\r\n                        <LazyWorkTypeChart \r\n                            workTypesQuantity={workTypesQuantity}                        \r\n                        />                    \r\n                    </Suspense>\r\n                </ChartContainer>\r\n\r\n\r\n                <ChartContainer\r\n                    open={openDays}\r\n                    handleClose={() => setOpenDays(false)}\r\n                    title=\"Dias trabajados y no trabajados\"\r\n                    htmlHelpContent={<>\r\n                        <p>{\"En este calendario se muestran los dias trabajados y no trabajados en el mes seleccionado.\"}</p>\r\n                        <p>{\"En cada dia aparecen cada uno de los trabajos realizados. Para conocer más pase el ratón sobre estos.\"}</p>\r\n                    </>}\r\n                >\r\n                    <Suspense fallback={\r\n                        <Skeleton width={'100%'} height={500} style={{maxWidth: '900px', margin: '40px auto'}}>\r\n                            <TodayIcon style={{width: '100%', height: '100%'}} color=\"disabled\"/>\r\n                        </Skeleton>\r\n                    }>\r\n                        <LazyCalendar \r\n                            data={dataIngresses}\r\n                            start={useDates ? moment(firstDate).format('YYYY-MM-DD') : undefined}\r\n                            end={useDates ? moment(lastDate).format('YYYY-MM-DD') : undefined}\r\n                        />\r\n                    </Suspense>\r\n                </ChartContainer>\r\n                \r\n            </Container>\r\n        \r\n        \r\n            <Fab \r\n                aria-label='Buscar' \r\n                className={classes.fab} \r\n                color=\"primary\"\r\n                onClick={() => setFilterOpen(true)}\r\n                size='medium'\r\n            >\r\n                <SearchIcon />    \r\n            </Fab>\r\n        \r\n        \r\n        <FilterView \r\n            open={filterOpen}\r\n            handleClose={filterHandleClose}\r\n\r\n            firstDate={firstDate}\r\n            handleIniDateChange={handleIniDateChange}\r\n            lastDate={lastDate}\r\n            handleEndDateChange={handleEndDateChange}\r\n            useDates={useDates}\r\n            setUseDate={setUseDate}\r\n            categoryState={categoryState}\r\n            setCategoryState={setCategoryState}\r\n            wtCategory={wtCategory}\r\n        />\r\n      </>\r\n    );\r\n\r\n    return error ? <>Error...</> :resp;\r\n\r\n}\r\nexport default Dashboard;","import Dashboard from './dashboard.view';\r\nexport default Dashboard;","import React, {Suspense, useCallback} from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport {LinearProgress} from '@material-ui/core';\r\nimport Header from './Header';\r\nimport Menu from './Menu';\r\n\r\n//import Charts from './Pages/Charts';\r\nimport Dashboard from './Pages/Dashboard';\r\n\r\nconst AsyncClientesPage = React.lazy(() => import('./Pages/Clients'));\r\nconst AsyncWorkTypesPage = React.lazy(() => import('./Pages/WorkTypes'));\r\nconst AsyncGastosPage = React.lazy(() => import('./Pages/Spends'));\r\nconst AsyncIngresosPage = React.lazy(() => import('./Pages/Ingress'));\r\n\r\nconst Core = props => {\r\n\r\n    const [openMenuState, setMenuOpen] = React.useState();\r\n\r\n    const openMenu = useCallback(() => setMenuOpen(true), []);\r\n    const closeMenu = useCallback(() => setMenuOpen(false), []);\r\n\r\n    const Progress = <LinearProgress color='secondary' />;\r\n\r\n    return (\r\n        <>\r\n            <Header setMenuOpen={openMenu}/>            \r\n            <Menu openMenuState={openMenuState} closeMenu={closeMenu}/>\r\n            <Switch>\r\n                <Route path={'/'} component={Dashboard} exact/>\r\n                <Route path={'/clientes'} render={\r\n                    () => {\r\n                        return <Suspense fallback={Progress}>\r\n                                    <AsyncClientesPage />\r\n                                </Suspense>    \r\n                    }\r\n                } />\r\n                <Route path={'/tipotrabajos'} render={\r\n                    () => {\r\n                        return <Suspense fallback={Progress}>\r\n                                    <AsyncWorkTypesPage />\r\n                                </Suspense>    \r\n                    }\r\n                } />    \r\n                <Route path={'/gastos'} render={\r\n                    () => {\r\n                        return <Suspense fallback={Progress}>\r\n                                    <AsyncGastosPage />\r\n                                </Suspense>    \r\n                    }\r\n                } />    \r\n                <Route path={'/ingresos'} render={\r\n                    () => {\r\n                        return <Suspense fallback={Progress}>\r\n                                    <AsyncIngresosPage />\r\n                                </Suspense>    \r\n                    }\r\n                } />  \r\n\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </>\r\n    );\r\n\r\n}\r\nexport default Core;","import React, {useContext} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {ApolloProvider} from 'react-apollo';\n//import {ApolloClient, ApolloLink, HttpLink, InMemoryCache} from 'apollo-boost';\nimport ApolloClient from 'apollo-boost';\n\nimport {graphQlEndPoint} from './utils';\nimport LoginProvider, {LoginContext} from './Login/login.model';\nimport Login from './Login/login.view';\nimport Core from './Core/core.view';\n\n\n\nconst App = () => {\n  \n  const client = new ApolloClient({\n    uri:graphQlEndPoint\n  })\n\n  return (\n    <ApolloProvider client={client}>\n      <LoginProvider>\n        <Main />\n      </LoginProvider>\n    </ApolloProvider>\n  );\n}\n\nconst Main = () => {\n\n  const [loginState] = useContext(LoginContext);\n\n  const AppCmp = !loginState.token \n                  ? <Login /> \n                  : <Core />\n\n  const client = new ApolloClient({\n    uri:graphQlEndPoint,\n    headers: {\n      authorization: `${loginState.token}`\n    }\n  });\n\n  return ( \n    <ApolloProvider client={client}>\n      <CssBaseline />\n      {AppCmp}\n    </ApolloProvider>\n  );\n\n}\n\nexport default App;\n","\r\nconst graphQlEndPoint = 'http://localhost:4000'\r\n\r\nexport {\r\n    graphQlEndPoint\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n","import React from 'react';\r\nimport {\r\n    Fab,\r\n    makeStyles,    \r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nconst CustomFabButton = props => {\r\n\r\n    const {onClick} = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return <Fab \r\n                aria-label='Adicionar' \r\n                className={classes.fab} \r\n                color=\"primary\"\r\n                onClick={onClick}\r\n            >\r\n                <AddIcon />\r\n        </Fab>;\r\n\r\n}\r\nexport {CustomFabButton};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\n\r\n\r\n\r\nimport FilterTiltShiftIcon from '@material-ui/icons/FilterTiltShift';\r\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  speedDial: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst OpenIconSpeedDial = props => {\r\n  \r\n  const {actions} = props;\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n     \r\n      <SpeedDial\r\n        ariaLabel=\"SpeedDial openIcon example\"\r\n        className={classes.speedDial}\r\n        icon={<SpeedDialIcon  openIcon={<FilterCenterFocusIcon />} icon={<FilterTiltShiftIcon /> } />}\r\n        \r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        open={open}\r\n      >\r\n        {\r\n        actions.map(action => (\r\n          <SpeedDialAction\r\n            key={action.name}\r\n            icon={action.icon}\r\n            tooltipTitle={action.name}\r\n            onClick={() => {\r\n              handleClose();\r\n              action.onClick();\r\n            }}\r\n          />\r\n        ))\r\n        }\r\n      </SpeedDial>\r\n    </div>\r\n  );\r\n}\r\n\r\nOpenIconSpeedDial.propTypes = {\r\n    actions: PropTypes.arrayOf(PropTypes.shape({\r\n        icon: PropTypes.element.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired\r\n    })).isRequired\r\n}\r\n\r\nexport {OpenIconSpeedDial};","import React, {useState, useCallback} from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport {\r\n    Snackbar,    \r\n    IconButton,\r\n    SnackbarContent,\r\n    makeStyles\r\n} from '@material-ui/core';\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n  };\r\n  \r\n  const useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n      backgroundColor: green[600],\r\n    },\r\n    error: {\r\n      backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n    warning: {\r\n      backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n      fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n      opacity: 0.9,\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n  }));\r\n\r\nconst MySnackbarContentWrapper = (props) => {\r\n    const classes = useStyles1();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    \r\n    const Icon = variantIcon[variant];\r\n  \r\n    return (\r\n      <SnackbarContent\r\n        className={clsx(classes[variant], className)}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n          <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n          </span>\r\n        }\r\n        action={[\r\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n            <CloseIcon className={classes.icon} />\r\n          </IconButton>\r\n        ]}\r\n        {...other}\r\n      />\r\n    );\r\n}\r\n\r\nconst Message = React.memo(props => {\r\n\r\n    const {\r\n        message,\r\n        variant,\r\n        open,\r\n        handleClose\r\n    } = props;\r\n\r\n    return <Snackbar\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            open={open}\r\n            onClose={handleClose}\r\n            autoHideDuration={7000}\r\n      >\r\n        <MySnackbarContentWrapper\r\n            onClose={handleClose}\r\n            variant={variant}\r\n            message={message}\r\n        />\r\n      </Snackbar>\r\n});\r\n\r\nconst useMessage = () => {\r\n\r\n    const initialState = {open: false, message: null, variant: 'success'};\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const setMessage = useCallback((msg, variant = \"success\") => {\r\n        if(msg && msg !== ''){\r\n            setState({open: true, message: msg, variant: variant});\r\n        }\r\n    }, [setState]);\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setState(state => ({\r\n           ...initialState,\r\n           variant: state.variant \r\n        }));\r\n      };\r\n\r\n    const cmpMsg = <Message \r\n        open={state.open} \r\n        message={state.message}\r\n        variant={state.variant} \r\n        handleClose={handleClose}   \r\n\r\n    />;\r\n\r\n    return [cmpMsg, setMessage];\r\n\r\n}\r\nexport {useMessage};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    TextField\r\n} from '@material-ui/core';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nconst NumberFormatCustom = props => {\r\n    const { inputRef, onChange, ...other } = props;\r\n  \r\n    return (\r\n      <NumberFormat\r\n        {...other}\r\n        getInputRef={inputRef}\r\n        onValueChange={values => {\r\n          onChange({\r\n            target: {\r\n              value: values.value,\r\n            },\r\n          });\r\n        }}\r\n        thousandSeparator\r\n        isNumericString\r\n        prefix=\"$\"\r\n      />\r\n    );\r\n  }\r\n  \r\nNumberFormatCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst NumberInput = props => {\r\n\r\n    const {value, handleChange, label} = props;\r\n\r\n    return <TextField\r\n                style={{marginTop: '8px', marginBottom: '4px', width: '100%', border: 0,\r\n                  display: \"inline-flex\",\r\n                  padding: 0,\r\n                  position: \"relative\",\r\n                  minWidth: 0,\r\n                  flexDirection: \"column\",\r\n                  verticalAlign: \"top\"\r\n                }}\r\n                label={label}\r\n                value={value}\r\n                onChange={handleChange}\r\n                id=\"formatted-numberformat-input\"\r\n                InputProps={{\r\n                  inputComponent: NumberFormatCustom,\r\n                }}\r\n                onFocus={event => event.target.select()}\r\n            />;\r\n\r\n}\r\n\r\nNumberInput.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string\r\n}\r\n\r\nexport {NumberInput};","import React, { useState } from 'react';\r\nimport {LinearProgress} from '@material-ui/core';\r\n\r\nconst CustomProgress = props => {\r\n    const {show} = props;\r\n    return show && <LinearProgress color='secondary'/>;\r\n}\r\n\r\nconst useProgress = (initialState = true) => {\r\n    const [show, setShow] = useState(initialState);\r\n    const ProgressElement = <CustomProgress show={show} />;\r\n    return [ProgressElement, setShow];\r\n}\r\n\r\nexport {useProgress};","const getStringDate = ISODate => {\r\n\r\n    const months = [\r\n        \"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \r\n        \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"\r\n    ];\r\n    const daysOfWeak = [\r\n        \"Domingo\", \"Lunes\", \"Martes\", \"Miercoles\", \"Jueves\", \"Viernes\", \"Sábado\"\r\n    ];\r\n\r\n    const date = new Date(ISODate);\r\n\r\n\r\n\r\n\r\n    const day = date.getDay()+1;\r\n    const dayOfMonth = date.getDate();\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n\r\n    return `${daysOfWeak[day - 1]}, ${dayOfMonth} de ${months[month]} del ${year}` ;\r\n\r\n}\r\nconst isYearBicester = year => year % 4 === 0;\r\nconst getTotalDaysOfMonth = (month, year) => {\r\n    switch(month){\r\n        case 1: return 31;\r\n        case 2: return (isYearBicester(year)) ? 29 : 28;\r\n        case 3: return 31;\r\n        case 4: return 30;\r\n        case 5: return 29;\r\n        case 6: return 30;\r\n        case 7: return 31;\r\n        case 8: return 31;\r\n        case 9: return 30;\r\n        case 10: return 30;\r\n        case 11: return 30;\r\n        case 12: return 31;\r\n        default: return 0;\r\n    }\r\n}\r\n\r\nconst getMonthRange = date => {\r\n    const month = date.getMonth();\r\n    const year = date.getFullYear();\r\n    const firstDay = 1;\r\n    const lastDay = getTotalDaysOfMonth(month, year);\r\n    const firstDate = new Date(year, month, firstDay, 0, 0, 0);\r\n    const lastDate = new Date(year, month, lastDay, 23, 59, 59, 99);\r\n    return {\r\n        firstDate,\r\n        lastDate\r\n    };\r\n}\r\nconst resetTimeToDate = date => {    \r\n    const newDate = new Date(date);\r\n    newDate.setHours(0, 0, 0, 0);\r\n    return newDate;\r\n}\r\n\r\nexport {getStringDate, getMonthRange, resetTimeToDate};","export * from './customAddButton.view';\r\nexport * from './customSpeedDial.view';\r\nexport * from './messageAPI';\r\nexport * from './numberInput.view';\r\nexport * from './progressAPI';\r\nexport * from './utils.functions';","import {gql} from 'apollo-boost';\r\nconst editWorkTypeMutation = gql`\r\nmutation ($workTypeId: ID, $wtcategoryId: ID!, $name: String!, $price: Float!) {\r\n    upsertWorkType(workTypeId: $workTypeId, wtcategoryId: $wtcategoryId, name: $name, price: $price){            \r\n        success\r\n        message\r\n        worktype {\r\n            id\r\n            name\r\n            price\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nconst removeWorkTypeMutation = gql`\r\nmutation($workTypeId: ID!){\r\n    removeWorkType(workTypeId: $workTypeId){\r\n        success\r\n        message\r\n    }\r\n}\r\n`;\r\nconst getWorkTypes = gql`\r\nquery {\r\n    worktypes {\r\n        success\r\n        message\r\n        worktype {\r\n            id\r\n            name\r\n            price\r\n            category {\r\n                id\r\n                name\r\n                color\r\n            }\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nconst getWorkTypeCategories = gql`\r\n    query {\r\n        worktypecategory {\r\n            success\r\n            message\r\n            worktypecategory{\r\n                id\r\n                name\r\n                color\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport {getWorkTypeCategories, getWorkTypes, removeWorkTypeMutation, editWorkTypeMutation};"],"sourceRoot":""}